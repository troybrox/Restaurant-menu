@page "/menu"

@inject HttpClient Http
@using RestaurantMenu.ClientBlazorApp.ViewModels
@using System.Text.Json
@using System.Text.Json.Serialization
@using Newtonsoft.Json
@using RestaurantMenu.ClientBlazorApp.Infrastructure

<h3>Меню блюд</h3>
@if (!_isMenuSucceeded)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>№</th>
                <th>Название блюда</th>
                <th>Описание блюда</th>
                <th>Состав</th>
                <th>Цена</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @if (_isMenuNotEmpty)
            {
                @foreach (var dish in _dishes)
                {
                    <tr>
                        <th scope="row">@dish.Id</th>
                        <td>@dish.Name</td>
                        <td>@dish.Description</td>
                        <td>@dish.Composition</td>
                        <td>@dish.Price</td>
                        <td>
                            <a>Изменить</a>
                            <a>Удалить</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>Список меню пуст!</tr>
            }

        </tbody>
    </table>
}

@code {
    private bool _isMenuSucceeded = false;
    private bool _isMenuNotEmpty  = false;

    private List<DishViewModel> _dishes;

    protected override async Task OnInitializedAsync()
    {
        var _requestResult = await Http.GetJsonAsync<RequestResult<List<DishViewModel>>>("https://localhost:44318/api/menu");
        if (_requestResult.Succeeded)
        {
            _isMenuSucceeded = true;
            if ((_dishes = _requestResult.Data) != null)
                _isMenuNotEmpty = true;
        }
    }
}
